buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
    }
}

apply plugin: 'com.android.application'

repositories {
    mavenCentral()
}
dependencies {
    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.github.gabrielemariotti.cards:library:1.6.0'
    compile files('libs/RootTools-3.4.jar')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 19
    }

    signingConfigs {
        release {
            storeFile file("/dev/null")
            keyAlias ""
            storePassword ""
            keyPassword ""
        }

        debug
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"
        }

        ci {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".snapshot"
            versionNameSuffix "-SNAPSHOT"
        }
    }

    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleRelease)) {
            def propSigning = new File('signing.properties')

            if (propSigning.canRead()) {
                def Properties props = new Properties()
                props.load(new FileInputStream(propSigning))

                if (props != null && props.containsKey('storeFile')) {
                    signingConfigs.release.storeFile = file(props['storeFile'])
                    signingConfigs.release.storePassword = new String(System.console().readPassword("Enter keystore password: "))
                    signingConfigs.release.keyAlias = System.console().readLine("Enter alias key: ")
                    signingConfigs.release.keyPassword = new String(System.console().readPassword("Enter key password: "))
                }
                else {
                    buildTypes.release.signingConfig = null
                }
            }
            else {
                buildTypes.release.signingConfig = null
            }
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}
