From 5db78d7f6168cf7380ef00d6e9ae009a1eb26f82 Mon Sep 17 00:00:00 2001
From: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
Date: Sun, 3 Jan 2016 02:18:10 -0500
Subject: [PATCH 2/2] Create multicall binary

---
 fsck/main.c |  2 +-
 fuse/main.c |  2 +-
 unified.c   | 36 ++++++++++++++++++++++++++++++++++++
 3 files changed, 38 insertions(+), 2 deletions(-)
 create mode 100644 unified.c

diff --git a/fsck/main.c b/fsck/main.c
index ded76b2..6aa78cf 100644
--- a/fsck/main.c
+++ b/fsck/main.c
@@ -134,7 +134,7 @@ static void usage(const char* prog)
 	exit(1);
 }
 
-int main(int argc, char* argv[])
+int fsck_main(int argc, char* argv[])
 {
 	int opt;
 	const char* spec = NULL;
diff --git a/fuse/main.c b/fuse/main.c
index 29ac3fc..81d6ee8 100644
--- a/fuse/main.c
+++ b/fuse/main.c
@@ -471,7 +471,7 @@ static char* add_fuse_options(char* options, const char* spec)
 	return options;
 }
 
-int main(int argc, char* argv[])
+int mount_main(int argc, char* argv[])
 {
 	struct fuse_args mount_args = FUSE_ARGS_INIT(0, NULL);
 	struct fuse_args newfs_args = FUSE_ARGS_INIT(0, NULL);
diff --git a/unified.c b/unified.c
new file mode 100644
index 0000000..f9f4438
--- /dev/null
+++ b/unified.c
@@ -0,0 +1,36 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+
+extern int fsck_main(int argc, char *argv[]);
+extern int mount_main(int argc, char *argv[]);
+
+struct tool {
+    const char *name;
+    int (*func)(int, char **);
+};
+
+struct tool tools[] = {
+    { "fsck.exfat", fsck_main },
+    { "mount.exfat", mount_main },
+    { NULL, NULL }
+};
+
+int main(int argc, char *argv[])
+{
+    const char *basename = argv[0];
+    const char *ptr;
+    if ((ptr = strrchr(basename, '/'))) {
+        basename = ptr + 1;
+    }
+
+    struct tool *tool;
+    for (tool = tools; tool->name; ++tool) {
+        if (strcmp(basename, tool->name) == 0) {
+            return tool->func(argc, argv);
+        }
+    }
+
+    fprintf(stderr, "%s: tool not found\n", basename);
+    return EXIT_FAILURE;
+}
-- 
2.6.4

