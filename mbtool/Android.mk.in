LOCAL_PATH := $(call my-dir)
THIRD_PARTY := @CMAKE_BINARY_DIR@/thirdparty
JANSSON_DIR := $(THIRD_PARTY)/android/jansson
LIBSEPOL_DIR := $(THIRD_PARTY)/android/libsepol
LIBXML2_DIR := $(THIRD_PARTY)/android/libxml2
LIBARCHIVE_DIR := $(THIRD_PARTY)/android/libarchive

include $(CLEAR_VARS)
LOCAL_MODULE    := libjansson
LOCAL_SRC_FILES := $(JANSSON_DIR)/lib_$(TARGET_ARCH_ABI)/libjansson.a
include $(PREBUILT_STATIC_LIBRARY)


include $(CLEAR_VARS)
LOCAL_MODULE    := libsepol
LOCAL_SRC_FILES := $(LIBSEPOL_DIR)/lib_$(TARGET_ARCH_ABI)/libsepol.a
include $(PREBUILT_STATIC_LIBRARY)


include $(CLEAR_VARS)
LOCAL_MODULE    := libxml2
LOCAL_SRC_FILES := $(LIBXML2_DIR)/lib_$(TARGET_ARCH_ABI)/libxml2.a
include $(PREBUILT_STATIC_LIBRARY)


include $(CLEAR_VARS)
LOCAL_MODULE    := libarchive
LOCAL_SRC_FILES := $(LIBARCHIVE_DIR)/lib_$(TARGET_ARCH_ABI)/libarchive.a
include $(PREBUILT_STATIC_LIBRARY)


include $(CLEAR_VARS)
LOCAL_SRC_FILES := \
	common.c \
	config.c \
	mount_fstab.c \
	main.c \
	roms.c \
	sepolpatch.c \
	update_binary.c \
	update_binary_tool.c \
	external/mntent.c \
	util/archive.c \
	util/command.c \
	util/copy.c \
	util/delete.c \
	util/directory.c \
	util/file.c \
	util/fstab.c \
	util/logging.c \
	util/mount.c \
	util/properties.c

LOCAL_MODULE := mbtool
LOCAL_STATIC_LIBRARIES := libjansson libsepol libxml2 libarchive

LOCAL_C_INCLUDES := \
	$(JANSSON_DIR)/include \
	$(LIBSEPOL_DIR)/include \
	$(LIBXML2_DIR)/include/libxml2 \
	$(LIBARCHIVE_DIR)/include

# Not sure why it tries to compile the binary with g++
TARGET_CXX := $(TOOLCHAIN_PREFIX)gcc

LOCAL_CFLAGS := -std=c11 -Wall -Wextra -Werror
LOCAL_LDFLAGS := -static

LOCAL_LDLIBS := -lz

include $(BUILD_EXECUTABLE)
