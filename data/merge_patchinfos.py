#!/usr/bin/env python3

import os

from xml.dom import minidom

base_dir = os.path.dirname(os.path.realpath(__file__))
search_path = os.path.join(base_dir, 'patchinfos')

doc = minidom.Document()
patchinfos = doc.createElement('patchinfos')
doc.appendChild(patchinfos)

xml_files = []

for root, dirs, files in os.walk(search_path):
    for f in files:
        if os.path.splitext(f)[1] == '.xml':
            fullpath = os.path.join(root, f)
            xml_files.append(fullpath)

xml_files.sort()


def remove_blanks(node):
    for x in node.childNodes:
        if x.nodeType == minidom.Node.TEXT_NODE:
            if x.nodeValue:
                x.nodeValue = x.nodeValue.strip()
        elif x.nodeType == minidom.Node.ELEMENT_NODE:
            remove_blanks(x)


for xml_file in xml_files:
    name = os.path.relpath(xml_file, search_path)[:-4]

    if name == 'Sample':
        continue

    xmldoc = minidom.parse(xml_file)
    remove_blanks(xmldoc.documentElement)
    xmldoc.documentElement.attributes['id'] = name
    patchinfos.appendChild(xmldoc.documentElement)


with open('patchinfos.gen.xml', 'wb') as f:
    f.write('<!-- THIS FILE IS AUTOMATICALLY GENERATED. PLEASE EDIT THE SOURCE CODE INSTEAD -->\n'.encode('UTF-8'))
    f.write(doc.toxml('UTF-8'))
